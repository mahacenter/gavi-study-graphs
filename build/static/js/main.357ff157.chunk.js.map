{"version":3,"sources":["svg/Maha_blanc.svg","graph/monthlyLegend.js","graph/CalendarGraph.js","data/mappers.js","graph/MultiLineGraph.js","App.js","reportWebVitals.js","index.js"],"names":["ramp","color","n","canvas","DOM","context","getContext","i","fillStyle","fillRect","cellSize","colorResolver","years","min","max","forEach","year","values","coverageRateDiff","legendBuilder","x","title","tickSize","width","height","marginTop","marginRight","marginBottom","marginLeft","ticks","tickFormat","tickValues","svg","d3","attr","style","tickAdjust","g","selectAll","interpolate","Math","domain","length","range","copy","rangeRound","append","toDataURL","interpolator","Object","assign","undefined","round","map","invertExtent","thresholds","quantiles","thresholdFormat","d","data","join","bandwidth","call","select","remove","text","node","legend","maxValue","CalendarGraph","props","useEffect","yearSvg","selectedRegions","name","_","index","key","month","cell","findIndex","selected","regionOrDistrict","indicator","targetPop","value","id","margin","getMonthValues","selectedIndicator","selectedOu","ouLabel","monthData","reduce","districtsValues","yearValuesAcc","districtValues","includes","regionsCoverageRateDiff","monthlyRegionsValues","districtsCoverageRateDiff","selectedDistricts","monthlyDistrictsValues","selectedOUs","allMonthlyData","allMonthsValueAccumulator","acc","previousYearMonthValues","yearMinusOne","previousYear","findPreviousYearMonthValues","monthValues","monthValuesWithCoverageRateDiff","monthValue","previousYearMonthDistrict","find","previousYearMonth","Number","coverageRate","toFixed","yearAcc","concat","push","regionSumValues","sumValues","districtSumValues","ouIndexedValues","indexed","ou","selecteDistrictOrRegion","ouValues","cumulatedValue","cumulatedTargetPop","ouValue","MultiLineGraph","dates","Date","y","series","nice","line","defined","isNaN","tickSizeOuter","clone","path","document","on","moved","entered","left","dot","event","preventDefault","pointer","this","xm","invert","ym","s","abs","filter","raise","Option","Select","App","useState","indicators","setSelectedIndicator","selectedRegion","setSelectedRegion","setSelectedDistricts","regionDistricts","regions","className","size","href","target","rel","src","logo","alt","onChange","placeholder","region","keys","mode","tokenSeparators","maxTagCount","district","sort","allMonths","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.357ff157.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Maha_blanc.8821f1d2.svg\";","import * as d3 from 'd3'\nimport DOM from \"@observablehq/stdlib/src/dom\";\n\nfunction ramp(color, n = 256) {\n    const canvas = DOM.canvas(n, 1);\n    const context = canvas.getContext(\"2d\");\n    for (let i = 0; i < n; ++i) {\n        context.fillStyle = color(i / (n - 1));\n        context.fillRect(i, 0, 1, 1);\n    }\n    return canvas;\n}\n\nexport function legend({\n                    color,\n                    title,\n                    tickSize = 6,\n                    width = 320,\n                    height = 44 + tickSize,\n                    marginTop = 18,\n                    marginRight = 0,\n                    marginBottom = 16 + tickSize,\n                    marginLeft = 0,\n                    ticks = width / 64,\n                    tickFormat,\n                    tickValues\n                } = {}) {\n\n    const svg = d3.create(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"viewBox\", [0, 0, width, height])\n        .style(\"overflow\", \"visible\")\n        .style(\"display\", \"block\");\n\n    let tickAdjust = g => g.selectAll(\".tick line\").attr(\"y1\", marginTop + marginBottom - height);\n    let x;\n\n    // Continuous\n    if (color.interpolate) {\n        const n = Math.min(color.domain().length, color.range().length);\n\n        x = color.copy().rangeRound(d3.quantize(d3.interpolate(marginLeft, width - marginRight), n));\n\n        svg.append(\"image\")\n            .attr(\"x\", marginLeft)\n            .attr(\"y\", marginTop)\n            .attr(\"width\", width - marginLeft - marginRight)\n            .attr(\"height\", height - marginTop - marginBottom)\n            .attr(\"preserveAspectRatio\", \"none\")\n            .attr(\"xlink:href\", ramp(color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))).toDataURL());\n    }\n\n    // Sequential\n    else if (color.interpolator) {\n        x = Object.assign(color.copy()\n                .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n            {range() { return [marginLeft, width - marginRight]; }});\n\n        svg.append(\"image\")\n            .attr(\"x\", marginLeft)\n            .attr(\"y\", marginTop)\n            .attr(\"width\", width - marginLeft - marginRight)\n            .attr(\"height\", height - marginTop - marginBottom)\n            .attr(\"preserveAspectRatio\", \"none\")\n            .attr(\"xlink:href\", ramp(color.interpolator()).toDataURL());\n\n        // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n        if (!x.ticks) {\n            if (tickValues === undefined) {\n                const n = Math.round(ticks + 1);\n                tickValues = d3.range(n).map(i => d3.quantile(color.domain(), i / (n - 1)));\n            }\n            if (typeof tickFormat !== \"function\") {\n                tickFormat = d3.format(tickFormat === undefined ? \",f\" : tickFormat);\n            }\n        }\n    }\n\n    // Threshold\n    else if (color.invertExtent) {\n        const thresholds\n            = color.thresholds ? color.thresholds() // scaleQuantize\n            : color.quantiles ? color.quantiles() // scaleQuantile\n                : color.domain(); // scaleThreshold\n\n        const thresholdFormat\n            = tickFormat === undefined ? d => d\n            : typeof tickFormat === \"string\" ? d3.format(tickFormat)\n                : tickFormat;\n\n        x = d3.scaleLinear()\n            .domain([-1, color.range().length - 1])\n            .rangeRound([marginLeft, width - marginRight]);\n\n        svg.append(\"g\")\n            .selectAll(\"rect\")\n            .data(color.range())\n            .join(\"rect\")\n            .attr(\"x\", (d, i) => x(i - 1))\n            .attr(\"y\", marginTop)\n            .attr(\"width\", (d, i) => x(i) - x(i - 1))\n            .attr(\"height\", height - marginTop - marginBottom)\n            .attr(\"fill\", d => d);\n\n        tickValues = d3.range(thresholds.length);\n        tickFormat = i => thresholdFormat(thresholds[i], i);\n    }\n\n    // Ordinal\n    else {\n        x = d3.scaleBand()\n            .domain(color.domain())\n            .rangeRound([marginLeft, width - marginRight]);\n\n        svg.append(\"g\")\n            .selectAll(\"rect\")\n            .data(color.domain())\n            .join(\"rect\")\n            .attr(\"x\", x)\n            .attr(\"y\", marginTop)\n            .attr(\"width\", Math.max(0, x.bandwidth() - 1))\n            .attr(\"height\", height - marginTop - marginBottom)\n            .attr(\"fill\", color);\n\n        tickAdjust = () => {};\n    }\n\n    svg.append(\"g\")\n        .attr(\"transform\", `translate(0,${height - marginBottom})`)\n        .call(d3.axisBottom(x)\n            .ticks(ticks, typeof tickFormat === \"string\" ? tickFormat : undefined)\n            .tickFormat(typeof tickFormat === \"function\" ? tickFormat : undefined)\n            .tickSize(tickSize)\n            .tickValues(tickValues))\n        .call(tickAdjust)\n        .call(g => g.select(\".domain\").remove())\n        .call(g => g.append(\"text\")\n            .attr(\"x\", marginLeft)\n            .attr(\"y\", marginTop + marginBottom - height - 6)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"font-weight\", \"bold\")\n            .text(title));\n\n    return svg.node();\n}","import React, {useEffect} from 'react'\nimport * as d3 from 'd3'\nimport {legend} from \"./monthlyLegend\";\n\nconst cellSize = 17;\nconst width = 954;\nconst legendWidth = 320;\n\nconst colorResolver = years => {\n    let min = 0, max = 0;\n    years.forEach(year => {\n        year.values.forEach(({coverageRateDiff}) => {\n            if (coverageRateDiff < min) min = coverageRateDiff;\n            if (coverageRateDiff > max) max = coverageRateDiff;\n        })\n    });\n\n    // const maxValue = Math.max(1.5, Math.max(max, -min));\n    const maxValue = 3;\n    return {\n        legendBuilder: () => legend({\n            color: d3.scaleDiverging([-maxValue / 100, 0, maxValue / 100], d3.interpolatePiYG),\n            width: legendWidth,\n            title: \"Monthly change\",\n            tickFormat: \"+%\"\n        }),\n        color: d3.scaleSequential(d3.interpolatePiYG).domain([-maxValue, maxValue]),\n    };\n};\n\nexport function CalendarGraph(props) {\n    useEffect(() => {\n        const {color, legendBuilder} = colorResolver(props.years);\n\n        d3.select(\"#calendar-legend\").selectAll(\"*\").remove();\n        d3.select(\"#calendar-legend\").append(() => legendBuilder());\n\n        d3.select(\"#calendar-graph\").selectAll(\"*\").remove();\n        const svg = d3.select(\"#calendar-graph\")\n            .attr(\"viewBox\", [0, 0, width, (40 + (props.selectedRegions.length * cellSize)) * props.years.length])\n            .attr(\"font-family\", \"sans-serif\")\n            .attr(\"font-size\", 10);\n\n        const yearSvg = svg.selectAll(\"g\")\n            .data(props.years)\n            .join(\"g\")\n            .attr(\"transform\", (d, i) => `translate(345,${(40 + (props.selectedRegions.length * cellSize)) * i + cellSize * 1.5})`);\n\n        yearSvg.append(\"text\")\n            .attr(\"x\", -5)\n            .attr(\"y\", -5)\n            .attr(\"font-weight\", \"bold\")\n            .attr(\"text-anchor\", \"end\")\n            .text(year => year.name);\n\n        yearSvg.append(\"g\")\n            .attr(\"text-anchor\", \"end\")\n            .selectAll(\"text\")\n            .data(props.selectedRegions)\n            .join(\"text\")\n            .attr(\"x\", -5)\n            .attr(\"y\", (_, index) => (index + 0.5) * cellSize)\n            .attr(\"dy\", \"0.31em\")\n            .text(key => key);\n\n\n        yearSvg.append(\"g\")\n            .selectAll(\"g\")\n            .data(['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'])\n            .join(\"g\")\n            .append(\"text\")\n            .attr(\"x\", (_, index) => index * cellSize + 20)\n            .attr(\"y\", -5)\n            .text(month => month);\n\n        yearSvg.append(\"g\")\n            .selectAll(\"rect\")\n            .data(year => year.values)\n            .join(\"rect\")\n            .attr(\"width\", cellSize - 1)\n            .attr(\"height\", cellSize - 1)\n            .attr(\"x\", cell => cell.month * cellSize + 0.5)\n            .attr(\"y\", cell => {\n                const regionIndex = props.selectedRegions.findIndex(selected => selected === cell.regionOrDistrict);\n                return regionIndex * cellSize + 0.5;\n            })\n            .attr(\"fill\", cell => color(cell.coverageRateDiff))\n            .append(\"title\")\n            .text(cell => `${props.indicator} for ${cell.regionOrDistrict}: \n- Coverage rate diff: ${cell.coverageRateDiff}\n- Target population: ${cell.targetPop}\n- Value: ${cell.value}`);\n    }, [props.indicator, props.selectedRegions, props.years]);\n\n    return <>\n        <div id=\"calendar-legend\" style={{width: legendWidth, margin: '25px auto auto'}}></div>\n        <svg id=\"calendar-graph\"></svg>\n    </>;\n}\n","import _ from \"lodash\";\nimport monthlyRegionsValues from \"./monthlyRegionsValues.json\";\nimport monthlyDistrictsValues from \"./monthlyDistrictsValues.json\";\n\nfunction getMonthValues(selectedIndicator, selectedOu, ouLabel, monthData) {\n  return _.reduce(monthData.districtsValues, (yearValuesAcc, districtValues) => {\n    if (!selectedOu.includes(districtValues[ouLabel])) {\n      return yearValuesAcc;\n    }\n    return [\n      ...yearValuesAcc,\n      {\n        month: monthData.month,\n        regionOrDistrict: districtValues[ouLabel],\n        ...districtValues[selectedIndicator],\n      }\n    ];\n  }, []);\n}\n\nexport function indicatorYearsValues(selectedIndicator, selectedDistricts) {\n  return monthlyDistrictsValues.reduce((acc, monthData) => {\n    const monthValues = getMonthValues(selectedIndicator, selectedDistricts, monthData);\n    const accYear = acc.find(year => year.name === monthData.year);\n    if (accYear) {\n      accYear.values = accYear.values.concat(monthValues);\n    } else {\n      acc.push({\n        name: monthData.year,\n        values: monthValues,\n      });\n    }\n    return acc;\n  }, []);\n}\n\nexport function regionsCoverageRateDiff(selectedIndicator, selectedRegions) {\n  return coverageRateDiff(selectedIndicator, selectedRegions, 'region', monthlyRegionsValues);\n}\n\nexport function districtsCoverageRateDiff(selectedIndicator, selectedDistricts) {\n  return coverageRateDiff(selectedIndicator, selectedDistricts, 'district', monthlyDistrictsValues);\n}\n\n/*\n * For performance reason we expect monthlyDistricsValues to be already ordered.\n */\nfunction coverageRateDiff(selectedIndicator, selectedOUs, ouLabel, allMonthlyData) {\n  const allMonthsValueAccumulator = {};\n  const findPreviousYearMonthValues = (monthData) => {\n    const yearMinusOne = monthData.year - 1;\n    const previousYear = allMonthsValueAccumulator[yearMinusOne];\n    return previousYear && previousYear[monthData.month];\n  };\n\n  return allMonthlyData.reduce((acc, monthData) => {\n    const previousYearMonthValues = findPreviousYearMonthValues(monthData);\n    const monthValues = getMonthValues(selectedIndicator, selectedOUs, ouLabel, monthData);\n    const monthValuesWithCoverageRateDiff = () => monthValues.map(monthValue => {\n      const previousYearMonthDistrict = previousYearMonthValues.find(previousYearMonth => previousYearMonth.regionOrDistrict === monthValue.regionOrDistrict);\n      return ({\n        ...monthValue,\n        coverageRateDiff: Number((monthValue.coverageRate - (previousYearMonthDistrict.coverageRate / monthValue.coverageRate)).toFixed(2)),\n      });\n    });\n\n    allMonthsValueAccumulator[monthData.year] = {\n      ...allMonthsValueAccumulator[monthData.year],\n      [monthData.month]: monthValues\n    };\n\n    const yearAcc = acc.find(year => year.name === monthData.year);\n    if (previousYearMonthValues && yearAcc) {\n      yearAcc.values = yearAcc.values.concat(monthValuesWithCoverageRateDiff());\n    } else if (previousYearMonthValues) {\n      acc.push({\n        name: monthData.year,\n        values: monthValuesWithCoverageRateDiff(),\n      });\n    }\n    return acc;\n  }, []);\n}\n\nexport function regionSumValues(selectedIndicator, selectedRegions) {\n  return sumValues(selectedIndicator, selectedRegions, 'region', monthlyRegionsValues);\n}\n\nexport function districtSumValues(selectedIndicator, selectedDistricts) {\n  return sumValues(selectedIndicator, selectedDistricts, 'district', monthlyDistrictsValues);\n}\n\n/*\n * For performance reason we expect monthlyDistricsValues to be already ordered.\n */\nfunction sumValues(selectedIndicator, selectedOUs, ouLabel, allMonthlyData) {\n  const ouIndexedValues = selectedOUs.reduce((indexed, ou) => ({...indexed, [ou]: []}), {});\n  allMonthlyData.forEach(monthData => {\n    selectedOUs.forEach(selecteDistrictOrRegion => {\n      ouIndexedValues[selecteDistrictOrRegion].push(monthData.districtsValues[selecteDistrictOrRegion][selectedIndicator]);\n    })\n  });\n\n  const seriesWithCatchUp = _.reduce(ouIndexedValues, (acc, ouValues, ouLabel) => {\n    let cumulatedValue = 0, cumulatedTargetPop = 0;\n    acc.push({\n      name: ouLabel,\n      values: ouValues.map(ouValue => {\n        cumulatedValue = cumulatedValue + ouValue.value;\n        cumulatedTargetPop = cumulatedTargetPop + (ouValue.targetPop / 12);\n        return (cumulatedValue / cumulatedTargetPop) * 100;\n      }),\n    });\n    return acc;\n  }, []);\n\n  return seriesWithCatchUp;\n}\n","import React, {useEffect} from 'react'\nimport * as d3 from 'd3'\n\nconst margin = ({top: 20, right: 20, bottom: 30, left: 30});\nconst height = 500;\nconst width = 800;\n\nexport function MultiLineGraph(props) {\n  useEffect(() => {\n    const dates = props.dates.map(d => new Date(d));\n\n    const x = d3.scaleUtc()\n      .domain(d3.extent(dates))\n      .range([margin.left, width - margin.right]);\n\n    const y = d3.scaleLinear()\n      .domain([0, d3.max(props.series, d => d3.max(d.values))]).nice()\n      .range([height - margin.bottom, margin.top]);\n\n    const xAxis = g => g\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x).ticks(width / 80).tickSizeOuter(0));\n\n    const yAxis = g => g\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y))\n      .call(g => g.select(\".domain\").remove())\n      .call(g => g.select(\".tick:last-of-type text\").clone()\n        .attr(\"x\", 3)\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"font-weight\", \"bold\")\n        .text(`${props.indicator}: Coverage rate catch-up %`));\n\n    const line = d3.line()\n      .defined(d => !isNaN(d))\n      .x((d, i) => x(dates[i]))\n      .y(d => y(d));\n\n    function hover(svg, path) {\n      if (\"ontouchstart\" in document) svg\n        .style(\"-webkit-tap-highlight-color\", \"transparent\")\n        .on(\"touchmove\", moved)\n        .on(\"touchstart\", entered)\n        .on(\"touchend\", left)\n      else svg\n        .on(\"mousemove\", moved)\n        .on(\"mouseenter\", entered)\n        .on(\"mouseleave\", left);\n\n      const dot = svg.append(\"g\")\n        .attr(\"display\", \"none\");\n\n      dot.append(\"circle\")\n        .attr(\"r\", 2.5);\n\n      dot.append(\"text\")\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", 10)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"y\", -8);\n\n      function moved(event) {\n        event.preventDefault();\n        const pointer = d3.pointer(event, this);\n        const xm = x.invert(pointer[0]);\n        const ym = y.invert(pointer[1]);\n        const i = d3.bisectCenter(dates, xm);\n        const s = d3.least(props.series, d => Math.abs(d.values[i] - ym));\n        path.attr(\"stroke\", d => d === s ? null : \"#ddd\").filter(d => d === s).raise();\n        dot.attr(\"transform\", `translate(${x(dates[i])},${y(s.values[i])})`);\n        dot.select(\"text\").text(s.name);\n      }\n\n      function entered() {\n        path.style(\"mix-blend-mode\", null).attr(\"stroke\", \"#ddd\");\n        dot.attr(\"display\", null);\n      }\n\n      function left() {\n        path.style(\"mix-blend-mode\", \"multiply\").attr(\"stroke\", null);\n        dot.attr(\"display\", \"none\");\n      }\n    }\n\n    d3.select(\"#multiline-graph\").selectAll(\"*\").remove();\n    const svg = d3.select(\"#multiline-graph\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"overflow\", \"visible\");\n\n    svg.append(\"g\")\n      .call(xAxis);\n\n    svg.append(\"g\")\n      .call(yAxis);\n\n    const path = svg.append(\"g\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-linecap\", \"round\")\n      .selectAll(\"path\")\n      .data(props.series)\n      .join(\"path\")\n      .style(\"mix-blend-mode\", \"multiply\")\n      .attr(\"d\", d => line(d.values));\n\n    svg.call(hover, path);\n  }, [props.dates, props.series, props.indicator]);\n\n  return <svg id=\"multiline-graph\" style={{width: width}}/>;\n}\n","import {Select, Space} from \"antd\";\nimport {useState} from \"react\";\nimport indicators from \"./data/indicators.json\";\nimport regions from \"./data/regions.json\";\nimport allMonths from \"./data/months.json\";\nimport logo from './svg/Maha_blanc.svg';\nimport {CalendarGraph} from \"./graph/CalendarGraph\";\nimport {\n  districtsCoverageRateDiff,\n  districtSumValues,\n  regionsCoverageRateDiff,\n  regionSumValues,\n} from \"./data/mappers\";\nimport {MultiLineGraph} from \"./graph/MultiLineGraph\";\nimport './App.css';\n\nconst { Option } = Select;\n\nfunction App() {\n  const [selectedIndicator, setSelectedIndicator] = useState(indicators[0]);\n  const [selectedRegion, setSelectedRegion] = useState();\n  const [selectedDistricts, setSelectedDistricts] = useState([]);\n  const regionDistricts = regions[selectedRegion];\n\n  return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Space size=\"large\">\n            <a href=\"https://www.mahacenter.com/\" target=\"_blank\" rel=\"noreferrer\">\n                <img src={logo} className=\"App-logo App-header--component\" alt=\"logo\" />\n            </a>\n            <Select className=\"App-header--indicators App-header--component\"\n                    value={selectedIndicator}\n                    onChange={setSelectedIndicator}>\n              {indicators.map(indicator => <Option value={indicator} key={indicator}>{indicator}</Option>)}\n            </Select>\n            <Select className=\"App-header--regions App-header--component\"\n                    placeholder=\"Select a region\"\n                    onChange={region => {\n                      setSelectedDistricts(regions[region]);\n                      setSelectedRegion(region);\n                    }}>\n              <Option value={null} key={\"none\"}></Option>\n              {Object.keys(regions).map(region => <Option value={region} key={region}>{region}</Option>)}\n            </Select>\n            {regionDistricts &&\n              <Select className=\"App-header--districts App-header--component\"\n                      placeholder=\"Select districts\"\n                      mode=\"tags\"\n                      tokenSeparators={[',']}\n                      maxTagCount={5}\n                      value={selectedDistricts}\n                      onChange={setSelectedDistricts}>\n                {regionDistricts.map(district => <Option value={district} key={district}>{district}</Option>)}\n              </Select>\n            }\n          </Space>\n        </header>\n          {selectedRegion ?\n            <>\n              <CalendarGraph\n                indicator={selectedIndicator}\n                years={districtsCoverageRateDiff(selectedIndicator, selectedDistricts)}\n                selectedRegions={selectedDistricts.sort()}/>\n              <MultiLineGraph\n                indicator={selectedIndicator}\n                dates={allMonths}\n                series={districtSumValues(selectedIndicator, selectedDistricts)}\n                selectedRegions={selectedDistricts.sort()}/>\n            </>\n          :\n            <>\n              <CalendarGraph\n                indicator={selectedIndicator}\n                years={regionsCoverageRateDiff(selectedIndicator, Object.keys(regions))}\n                selectedRegions={Object.keys(regions).sort()}/>\n              <MultiLineGraph\n                indicator={selectedIndicator}\n                dates={allMonths}\n                series={regionSumValues(selectedIndicator, Object.keys(regions))}\n                selectedRegions={selectedDistricts.sort()}/>\n            </>\n          }\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}